@page "/"

<style>
    .map {
    }

    .map-row {
        clear: both;
    }

    .map-tile {
        width: 32px;
        height: 32px;
        float: left;
        border: 1px #888 dashed;
        font-size: 6pt;
        overflow: hidden;
    }

    .map-tile-layer {
        position: absolute;
    }

    .world-object {
        cursor: pointer;
    }

    .walkable:hover {
        background-position: 1792px 0px;
        cursor: pointer;
    }
</style>

<h1>Hello, world!</h1>

Welcome to your new app.

<a class="button" href="/editor">Go to editor</a> | <a class="button" href="docs">Go to Game Design Document</a>

<h2>UI Components</h2>

The user interface components are found in the following sections.

<h3>Typography</h3>

<h1>Header 1</h1>
<h2>Header 2</h2>
<h3>Header 3</h3>
<h4>Header 4</h4>
<h5>Header 5</h5>

<p>
    This is a paragraph of text. <br />
    Text can have different styles, such as <b>bold</b>, <i>italic</i>.
</p>

<h3>Tables</h3>

<h3>Table</h3>

<table>
    <thead>
        <tr>
            <td>Key</td>
            <td>Column 1</td>
            <td>Column 2</td>
            <td>Column 3</td>
            <td>Column 4</td>
            <td>Column 5</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>2</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>3</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>4</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>5</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
    </tbody>
</table>

<h4>Condensed table</h4>

<table class="table-condensed">
    <thead>
        <tr>
            <td>Key</td>
            <td>Column 1</td>
            <td>Column 2</td>
            <td>Column 3</td>
            <td>Column 4</td>
            <td>Column 5</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>2</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>3</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>4</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
        <tr>
            <td>5</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
            <td>...</td>
        </tr>
    </tbody>
</table>

<h3>Forms</h3>

<input type="text" placeholder="Text input"/> <br/>
<button>Button</button><br/>
<button class="button-small">small button</button><br/>
<input type="checkbox" /> Checkbox <br/>
<input type="radio" /> Radio<br/>

<h2>Map</h2>

This is an example of how a map would look:

<div class="map">
    @for (int y = 0; y < 17; y++)
    {
        <div class="map-row">
            @for (int x = 0; x < 17; x++)
            {
                <div class="map-tile">
                    <div class="map-tile-layer">
                        <div class="tile tile-2305"></div>
                    </div>
                    @foreach (var worldObjects in WorldObjects.Where(wo => wo.Position.X == x && wo.Position.Y == y))
                    {
                        <div class="map-tile-layer">
                            <div class="tile tile-@worldObjects.TileId world-object" data-toggle="tooltip" title="@worldObjects.Name"></div>
                        </div>
                    }
                    @if (CanMove((x, y)))
                    {
                        <div class="map-tile-layer">
                            <div class="tile walkable" @onclick="() => MoveTo(x, y)"></div>
                        </div>
                    }
                    @*<div class="map-tile-layer" style="color: white">
                            (@x, @y)
                        </div>*@
                </div>
            }
        </div>
    }
    <div style="clear: both;"></div>
</div>

<input type="text" @bind="Message" @onkeyup="Command" />
<br />
<hr />
@foreach (var msg in Output)
{
    <p>@msg</p>
}

<h2>Tileset</h2>

This list contains all the possible tiles that can be used in the RPG game.

<div>
    @for (int y = 0; y < 3744; y += 32)
    {
        for (int x = 0; x < 2048; x += 32)
        {
            <div class="tile tile-@(currentId)" style="float: left;" data-toggle="tooltip" title="@currentId"></div>
            currentId++;
        }
    }
</div>

@code
{
    private int currentId = 0;
    private List<WorldObject> WorldObjects = new List<WorldObject>();
    private string Message { get; set; }
    private List<string> Output { get; set; } = new List<string>();
    private bool CanMove((int x, int y) position)
    {
        var manhattanDistance = Math.Abs(8 - position.x) + Math.Abs(8 - position.y);
        return manhattanDistance != 0 && manhattanDistance < 3;
    }

    protected override void OnInitialized()
    {
        var shrine = new WorldObject
        {
            Position = (5, 5),
            TileId = 2412,
            Name = "Shrine of Health"
        };

        WorldObjects.Add(shrine);

        var character = new WorldObject
        {
            Position = (8, 8),
            TileId = 1088,
            Name = "Player"
        };

        WorldObjects.Add(character);

        var armor = new WorldObject
        {
            Position = (8, 8),
            TileId = 981
        };

        WorldObjects.Add(armor);
    }

    private void MoveTo(int x, int y)
    {
        var player = WorldObjects.First(wo => wo.Name == "Player");
        player.Position = (x, y);
    }

    private void Command(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            Output.Add(Message);
            Message = String.Empty;
        }
    }

    private class WorldObject
    {
        public (int X, int Y) Position;
        public int TileId;
        public string Name;
    }
}